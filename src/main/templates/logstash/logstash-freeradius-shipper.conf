# based on https://github.com/mcnewton/elk/blob/master/grok-patterns/freeradius

input {
        file {
		path => "/usr/local/var/log/radius/radius.log"
        	type => "freeradius"
        	sincedb_path => "/opt/logstash/.sincedb"
	}
}

filter {
  if [type] == "freeradius" {
    grok {
	add_field => [ "strategy", "freeradius" ]
      patterns_dir => "/etc/logstash/patterns/"
      match => [ "message", "%{FREERADIUS_LINE}" ]
    }

    if [fr_logclass] == "Auth" {
      grok {
        patterns_dir => "/etc/logstash/patterns/"
        match => [ "fr_message", "%{FREERADIUS_AUTH}" ]
      }
    }

    if [fr_logclass] == "Debug" {
      grok {
        patterns_dir => "/etc/logstash/patterns/"
        break_on_match => false
        match => [ "fr_message", "%{FREERADIUS_ROLE}",
                   "fr_message", "%{FREERADIUS_ACCESS_ACCEPT}",
                   "fr_message", "%{FREERADIUS_ACCESS_REJECT}",
                   "fr_message", "%{FREERADIUS_REQUEST_FINISHED}" ]
      }
    }

    if [fr_logclass] == "Error" {
      grok {
        patterns_dir => "/etc/logstash/patterns/"
        break_on_match => false
        match => [ "fr_message", "%{FREERADIUS_ERROR_ID}",
                   "fr_message", "%{FREERADIUS_ERROR_CLIENT}",
                   "fr_message", "%{FREERADIUS_ERROR_PORT}",
                   "fr_message", "%{FREERADIUS_ERROR_REQUEST}",
                   "fr_message", "%{FREERADIUS_ERROR_MODULE}" ]
      }
    }

#    sanitize_mac {
 #     match => { "radius_cli" => "client_mac" }
  #    fixcase => "lower"
   #   separator => ":"
   # }

    date {
      match => [ "timestamp" , "EEE MMM dd HH:mm:ss YYYY",
                               "EEE MMM  d HH:mm:ss YYYY"]
    }
 }

}

output {
#        stdout {
#	}
       redis {
               host => "127.0.0.1"
               data_type => "list"
               key => "logstash"
       }
}

